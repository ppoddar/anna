INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:96	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:96	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:96	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:96	micro-service [kitchen-service] starting on port 9040...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:96	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:96	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:96	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:96	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /item/
WARN: ../common/src/database.js:142	Query [exists-item] SQL:[SELECT sku from ITEMS WHERE sku = $1] with parameters [101] returned 0 rows. Expected single row. Returning null
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/ of type Object
INFO: ../common/src/base-controller.js:24	{"sku":"101","name":"vegeterian thali","category":"veg","price":5,"description":"Three vegetable served with served with rich 2 chapatis","image":"/images/item/veg-thali.jpg"}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /item/
WARN: ../common/src/database.js:142	Query [exists-item] SQL:[SELECT sku from ITEMS WHERE sku = $1] with parameters [102] returned 0 rows. Expected single row. Returning null
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/ of type Object
INFO: ../common/src/base-controller.js:24	{"sku":"102","name":"vegetable samosa","category":"veg","price":8.7,"description":"Alooo gobi wrapped an samosa","image":"/images/item/singara.jpg"}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /item/
WARN: ../common/src/database.js:142	Query [exists-item] SQL:[SELECT sku from ITEMS WHERE sku = $1] with parameters [103] returned 0 rows. Expected single row. Returning null
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/ of type Object
INFO: ../common/src/base-controller.js:24	{"sku":"103","name":"Gobi Manchurian","category":"veg","tags":["spicy"],"price":6.2,"description":"cauliflower in indo-chience style","image":"/images/item/gobi-manchurian.jpg"}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /item/
WARN: ../common/src/database.js:142	Query [exists-item] SQL:[SELECT sku from ITEMS WHERE sku = $1] with parameters [201] returned 0 rows. Expected single row. Returning null
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/ of type Object
INFO: ../common/src/base-controller.js:24	{"sku":"201","name":"non-veg thali","category":"non-veg","price":15,"description":"Three vegetable served with served witth rich 2 chapatis","image":"/images/item/non-veg-thali.jpg"}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /item/
WARN: ../common/src/database.js:142	Query [exists-item] SQL:[SELECT sku from ITEMS WHERE sku = $1] with parameters [202] returned 0 rows. Expected single row. Returning null
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/ of type Object
INFO: ../common/src/base-controller.js:24	{"sku":"202","name":"Chicken Manchurian","category":"chicken","price":9,"description":"indian chinese style chicken","image":"/images/item/chicken-manchurian.jpg"}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /item/
WARN: ../common/src/database.js:142	Query [exists-item] SQL:[SELECT sku from ITEMS WHERE sku = $1] with parameters [301] returned 0 rows. Expected single row. Returning null
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/ of type Object
INFO: ../common/src/base-controller.js:24	{"sku":"301","name":"Prawn with rice","category":"fish","price":9,"description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","image":"/images/item/prawn-with-rice.jpg"}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /user/
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/ of type Object
INFO: ../common/src/base-controller.js:24	{"id":"guest","phone":"+91 12345678","name":"guest","email":"guest@hiraafood.com","roles":["guest"],"addresses":{"home":{"kind":"home","line1":"AA 10/7","city":"Deshbandhu Nagar","zip":"70059"},"billing":{"kind":"billing","line1":"AA 10/7","city":"Deshbandhu Nagar","zip":"70059"}}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /user/
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/ of type Object
INFO: ../common/src/base-controller.js:24	{"id":"cook","name":"test cook","roles":["kitchen"]}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /user/
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/ of type Object
INFO: ../common/src/base-controller.js:24	{"id":"tester","name":"test user","phone":"+91 12345678","email":"tester@hiraafood.com","roles":["customer"],"addresses":{"home":{"kind":"home","line1":"AA 10/7","city":"Deshbandhu Nagar","zip":"70059"},"billing":{"kind":"billing","line1":"AA 10/7","city":"Deshbandhu Nagar","zip":"70059"}}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /user/
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/ of type Object
INFO: ../common/src/base-controller.js:24	{"id":"delivery","name":"test delivery","roles":["delivery"]}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /user/
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/ of type Object
INFO: ../common/src/base-controller.js:24	{"id":"packer","name":"test packer","roles":["packing"]}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"1","user":"tester","created":"2020-07-13T19:03:58.059Z","time_offset":"-25200","status":"CREATED","items":[],"total":0}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
ERROR: ../common/src/base-server.js:127	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:128	`amount` is mandatory
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"2","user":"tester","created":"2020-07-13T19:18:20.469Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:96	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:96	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:96	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:96	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:96	micro-service [kitchen-service] starting on port 9040...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:96	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:96	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:96	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"3","user":"tester","created":"2020-07-13T19:22:08.393Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
ERROR: ../common/src/base-server.js:127	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:128	`amount` is mandatory
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"4","user":"tester","created":"2020-07-13T19:22:43.058Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"5","user":"tester","created":"2020-07-13T19:22:52.492Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"6","user":"tester","created":"2020-07-13T19:23:12.501Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"7","user":"tester","created":"2020-07-13T19:23:47.664Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:109	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/base-server.js:96	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:96	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:96	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:96	micro-service [order-service] starting on port 9030...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:96	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:96	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:96	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:96	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:96	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
ERROR: ../common/src/base-controller.js:49	TypeError: Cannot read property 'query' of undefined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR TypeError (500)  ======================
ERROR: ../common/src/base-server.js:130	Cannot read property 'begin' of undefined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR TypeError (500)  ======================
ERROR: ../common/src/base-server.js:130	Cannot read property 'query' of undefined
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
ERROR: ../common/src/base-controller.js:49	TypeError: Cannot read property 'query' of undefined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR TypeError (500)  ======================
ERROR: ../common/src/base-server.js:130	Cannot read property 'query' of undefined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
ERROR: ../common/src/base-controller.js:49	TypeError: Cannot read property 'query' of undefined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR TypeError (500)  ======================
ERROR: ../common/src/base-server.js:130	Cannot read property 'query' of undefined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"10","user":"tester","created":"2020-07-13T19:55:11.700Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
INFO: ../common/src/database.js:206	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:206	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/database.js:206	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:206	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
ERROR: ../common/src/base-controller.js:49	ReferenceError: db is not defined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR ReferenceError (500)  ======================
ERROR: ../common/src/base-server.js:130	db is not defined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR ReferenceError (500)  ======================
ERROR: ../common/src/base-server.js:130	db is not defined
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:206	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:206	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"11","user":"tester","created":"2020-07-13T20:04:55.355Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
INFO: ../common/src/database.js:206	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:206	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:206	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:206	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:206	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:206	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:206	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/database.js:17	found 9 sqls
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:17	found 13 sqls
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"12","user":"tester","created":"2020-07-13T20:05:23.683Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/database.js:206	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:206	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:206	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:206	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:206	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:206	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:206	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:206	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:206	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:206	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:206	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:206	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:206	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:206	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:206	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:206	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:206	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:206	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:206	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:206	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:206	[select-sessions] SELECT id, user ....
INFO: ../common/src/database.js:17	found 34 sqls
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"13","user":"tester","created":"2020-07-13T20:25:52.331Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"14","user":"tester","created":"2020-07-13T20:30:17.373Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"15","user":"tester","created":"2020-07-13T20:31:41.557Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-controller.js:24	{"name":"hiraafood","version":"1.0.0","build":"","payment":{"key_id":"rzp_test_5GjkKK47NrE4b0","key_secret":"kpwjzn4pPpaVdDlXBqmYq5Ku"}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-controller.js:24	[{"sku":"101","name":"vegeterian thali","category":"veg","description":"Three vegetable served with served with rich 2 chapatis","price":"5.00","image":"/images/item/veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"102","name":"vegetable samosa","category":"veg","description":"Alooo gobi wrapped an samosa","price":"8.70","image":"/images/item/singara.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"103","name":"Gobi Manchurian","category":"veg","description":"cauliflower in indo-chience style","price":"6.20","image":"/images/item/gobi-manchurian.jpg","tags":"spicy","rating":"3.0000000000000000"},{"sku":"201","name":"non-veg thali","category":"non-veg","description":"Three vegetable served with served witth rich 2 chapatis","price":"15.00","image":"/images/item/non-veg-thali.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"202","name":"Chicken Manchurian","category":"chicken","description":"indian chinese style chicken","price":"9.00","image":"/images/item/chicken-manchurian.jpg","tags":null,"rating":"3.0000000000000000"},{"sku":"301","name":"Prawn with rice","category":"fish","description":"succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice","price":"9.00","image":"/images/item/prawn-with-rice.jpg","tags":null,"rating":"3.0000000000000000"}]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"16","user":"tester","created":"2020-07-13T20:37:15.379Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[16,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[16,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,16]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"16","user":"tester","created":"2020-07-13T20:37:15.379Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=1&delivery_address=home
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [1]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [1] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [1]
DEBUG: ../common/src/database.js:132	returns  0 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [1] returns 0 rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [1]
DEBUG: ../common/src/database.js:132	returns  0 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [1] returns 0 rows
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[1,,]
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[1,0,TAX,,sales tax @7%,0]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:111	invoice.amount=0
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 0 for order [1]
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	`amount` is mandatory
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"17","user":"tester","created":"2020-07-13T20:52:26.334Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[17,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[17,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,17]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"17","user":"tester","created":"2020-07-13T20:52:26.334Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"18","user":"tester","created":"2020-07-13T20:52:53.078Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[18,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[18,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,18]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"18","user":"tester","created":"2020-07-13T20:52:53.078Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid="18"&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order "18"
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters ["18"]
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters ["18"] encountered error: invalid input syntax for type integer: ""18""
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"19","user":"tester","created":"2020-07-13T20:56:12.319Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[19,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[19,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,19]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"19","user":"tester","created":"2020-07-13T20:56:12.319Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=19&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 19
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [19]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [19] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [19]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [19] returns 2 rows
DEBUG: src/order-service.js:205	found order 19 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [19]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [19] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[19,,]
DEBUG: src/order-service.js:188	invoice 19 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[19,0,PRICE,101,price for item,5.00]
DEBUG: src/order-service.js:188	invoice 19 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[19,1,PRICE,102,price for item,17.40]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 19 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[19,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [19]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7TEwJDfXZyTE","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"19","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594673771}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[19,order_FE7TEwJDfXZyTE,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[19,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=19&delivery_address=home of type Object
INFO: ../common/src/base-controller.js:24	{"id":"19","billingAddress":{},"deliveryAddress":{},"items":[{"invoice":"19","id":0,"kind":"PRICE","sku":"101","description":"price for item","amount":"5.00"},{"invoice":"19","id":1,"kind":"PRICE","sku":"102","description":"price for item","amount":"17.40"},{"invoice":"19","id":2,"kind":"TAX","sku":"","description":"sales tax @7%","amount":1.57}],"amount":23.97,"payorder":{"id":"order_FE7TEwJDfXZyTE","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"19","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594673771}}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"20","user":"tester","created":"2020-07-13T21:00:21.170Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[20,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[20,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,20]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-controller.js:24	{"id":"20","user":"tester","created":"2020-07-13T21:00:21.170Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=20&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 20
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [20]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [20] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [20]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [20] returns 2 rows
DEBUG: src/order-service.js:205	found order 20 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [20]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [20] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[20,,]
DEBUG: src/order-service.js:188	invoice 20 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[20,0,PRICE,101,price for item,5.00]
DEBUG: src/order-service.js:188	invoice 20 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[20,1,PRICE,102,price for item,17.40]
DEBUG: src/order-service.js:188	invoice 20 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[20,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [20]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7Xc4GqDrWd7l","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"20","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674020}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[20,order_FE7Xc4GqDrWd7l,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[20,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=20&delivery_address=home of type Object
INFO: ../common/src/base-controller.js:24	{"id":"20","billingAddress":{},"deliveryAddress":{},"items":[{"invoice":"20","id":0,"kind":"PRICE","sku":"101","description":"price for item","amount":"5.00"},{"invoice":"20","id":1,"kind":"PRICE","sku":"102","description":"price for item","amount":"17.40"},{"invoice":"20","id":2,"kind":"TAX","sku":"","description":"sales tax @7%","amount":1.57}],"amount":23.97,"payorder":{"id":"order_FE7Xc4GqDrWd7l","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"20","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674020}}
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"21","user":"tester","created":"2020-07-13T21:00:44.755Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[21,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[21,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,21]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=21&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 21
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [21]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [21] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [21]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [21] returns 2 rows
DEBUG: src/order-service.js:205	found order 21 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [21]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [21] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[21,,]
DEBUG: src/order-service.js:188	invoice 21 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[21,0,PRICE,101,price for item,5.00]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 21 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[21,1,PRICE,102,price for item,17.40]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: src/order-service.js:188	invoice 21 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[21,2,TAX,,sales tax @7%,1.57]
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [21]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7Y2ENe2gMfZG","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"21","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674044}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[21,order_FE7Y2ENe2gMfZG,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[21,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=21&delivery_address=home of type Object
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"22","user":"tester","created":"2020-07-13T21:01:33.763Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[22,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[22,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,22]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=22&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 22
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [22]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [22] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [22]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [22] returns 2 rows
DEBUG: src/order-service.js:205	found order 22 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [22]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [22] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[22,,]
DEBUG: src/order-service.js:188	invoice 22 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[22,0,PRICE,101,price for item,5.00]
DEBUG: src/order-service.js:188	invoice 22 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[22,1,PRICE,102,price for item,17.40]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 22 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[22,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [22]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7YteygkXbVmc","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"22","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674093}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[22,order_FE7YteygkXbVmc,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[22,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=22&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"23","user":"tester","created":"2020-07-13T21:02:58.047Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[23,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[23,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,23]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=23&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 23
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [23]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [23] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [23]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [23] returns 2 rows
DEBUG: src/order-service.js:205	found order 23 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [23]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [23] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[23,,]
DEBUG: src/order-service.js:188	invoice 23 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[23,0,PRICE,101,price for item,5.00]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 23 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[23,1,PRICE,102,price for item,17.40]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 23 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[23,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [23]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7aNe63Xghyjw","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"23","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674177}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[23,order_FE7aNe63Xghyjw,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[23,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=23&delivery_address=home of type Object
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"24","user":"tester","created":"2020-07-13T21:03:17.555Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[24,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[24,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,24]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=24&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 24
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [24]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [24] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [24]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [24] returns 2 rows
DEBUG: src/order-service.js:205	found order 24 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [24]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [24] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[24,,]
DEBUG: src/order-service.js:188	invoice 24 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[24,0,PRICE,101,price for item,5.00]
DEBUG: src/order-service.js:188	invoice 24 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[24,1,PRICE,102,price for item,17.40]
DEBUG: src/order-service.js:188	invoice 24 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[24,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [24]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7aj09I3dpKkS","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"24","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674197}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[24,order_FE7aj09I3dpKkS,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[24,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=24&delivery_address=home of type Object
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"25","user":"tester","created":"2020-07-13T21:04:43.301Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[25,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[25,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,25]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR ReferenceError (500)  ======================
ERROR: ../common/src/base-server.js:130	nil is not defined
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters []
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [] encountered error: invalid input syntax for type integer: ""
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"26","user":"tester","created":"2020-07-13T21:05:21.654Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[26,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[26,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,26]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:26	{"id":"26","user":"tester","created":"2020-07-13T21:05:21.654Z","time_offset":"-25200","status":"CREATED","items":[{"sku":"101","name":"vegeterian thali","price":5,"units":1},{"sku":"102","name":"vegetable samosa","price":17.4,"units":2}],"total":22.4}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=26&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 26
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [26]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [26] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [26]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [26] returns 2 rows
DEBUG: src/order-service.js:205	found order 26 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [26]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [26] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[26,,]
DEBUG: src/order-service.js:188	invoice 26 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[26,0,PRICE,101,price for item,5.00]
DEBUG: src/order-service.js:188	invoice 26 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[26,1,PRICE,102,price for item,17.40]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 26 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[26,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [26]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7cuTcYaSIxdD","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"26","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674321}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[26,order_FE7cuTcYaSIxdD,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[26,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=26&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:26	{"id":"26","billingAddress":{},"deliveryAddress":{},"items":[{"invoice":"26","id":0,"kind":"PRICE","sku":"101","description":"price for item","amount":"5.00"},{"invoice":"26","id":1,"kind":"PRICE","sku":"102","description":"price for item","amount":"17.40"},{"invoice":"26","id":2,"kind":"TAX","sku":"","description":"sales tax @7%","amount":1.57}],"amount":23.97,"payorder":{"id":"order_FE7cuTcYaSIxdD","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"26","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674321}}
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"27","user":"tester","created":"2020-07-13T21:06:40.076Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[27,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[27,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,27]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=27&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 27
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [27]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [27] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [27]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [27] returns 2 rows
DEBUG: src/order-service.js:205	found order 27 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [27]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [27] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[27,,]
DEBUG: src/order-service.js:188	invoice 27 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[27,0,PRICE,101,price for item,5.00]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 27 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[27,1,PRICE,102,price for item,17.40]
DEBUG: src/order-service.js:188	invoice 27 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[27,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [27]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7eICwZpYkaAe","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"27","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674399}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[27,order_FE7eICwZpYkaAe,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[27,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=27&delivery_address=home of type Object
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"28","user":"tester","created":"2020-07-13T21:08:19.726Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[28,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[28,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,28]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "28",
  "user": "tester",
  "created": "2020-07-13T21:08:19.726Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "101",
      "name": "vegeterian thali",
      "price": 5,
      "units": 1
    },
    {
      "sku": "102",
      "name": "vegetable samosa",
      "price": 17.4,
      "units": 2
    }
  ],
  "total": 22.4
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=28&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 28
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [28]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [28] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [28]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [28] returns 2 rows
DEBUG: src/order-service.js:205	found order 28 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [28]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [28] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[28,,]
DEBUG: src/order-service.js:188	invoice 28 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[28,0,PRICE,101,price for item,5.00]
DEBUG: src/order-service.js:188	invoice 28 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[28,1,PRICE,102,price for item,17.40]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 28 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[28,2,TAX,,sales tax @7%,1.57]
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [28]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE7g2y9sEaJJjg","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"28","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594674499}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[28,order_FE7g2y9sEaJJjg,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[28,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=28&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "28",
  "billingAddress": {},
  "deliveryAddress": {},
  "items": [
    {
      "invoice": "28",
      "id": 0,
      "kind": "PRICE",
      "sku": "101",
      "description": "price for item",
      "amount": "5.00"
    },
    {
      "invoice": "28",
      "id": 1,
      "kind": "PRICE",
      "sku": "102",
      "description": "price for item",
      "amount": "17.40"
    },
    {
      "invoice": "28",
      "id": 2,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 1.57
    }
  ],
  "amount": 23.97,
  "payorder": {
    "id": "order_FE7g2y9sEaJJjg",
    "entity": "order",
    "amount": 2397,
    "amount_paid": 0,
    "amount_due": 2397,
    "currency": "INR",
    "receipt": "28",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594674499
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"29","user":"tester","created":"2020-07-13T21:09:25.522Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[29,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,29]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "29",
  "user": "tester",
  "created": "2020-07-13T21:09:25.522Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"30","user":"tester","created":"2020-07-13T21:13:35.675Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[30,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,30]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "30",
  "user": "tester",
  "created": "2020-07-13T21:13:35.675Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"31","user":"tester","created":"2020-07-13T21:35:29.016Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[31,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,31]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "31",
  "user": "tester",
  "created": "2020-07-13T21:35:29.016Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=31&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 31
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [31]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [31] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [31]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [31] returns 1 rows
DEBUG: src/order-service.js:205	found order 31 with 1 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [31]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [31] returns 1 rows
DEBUG: src/order-service.js:77	order has 1 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[31,,]
DEBUG: src/order-service.js:188	invoice 31 add item   0 PRICE price for item 9.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[31,0,PRICE,202,price for item,9.00]
DEBUG: src/order-service.js:188	invoice 31 add item   1 TAX sales tax @7% 0.63
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[31,1,TAX,,sales tax @7%,0.63]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=9.63
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 9.63 for order [31]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FE88l57dlrmLEd","entity":"order","amount":963,"amount_paid":0,"amount_due":963,"currency":"INR","receipt":"31","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594676130}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[31,order_FE88l57dlrmLEd,9.63]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[31,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=31&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "31",
  "billingAddress": {},
  "deliveryAddress": {},
  "items": [
    {
      "invoice": "31",
      "id": 0,
      "kind": "PRICE",
      "sku": "202",
      "description": "price for item",
      "amount": "9.00"
    },
    {
      "invoice": "31",
      "id": 1,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 0.63
    }
  ],
  "amount": 9.63,
  "payorder": {
    "id": "order_FE88l57dlrmLEd",
    "entity": "order",
    "amount": 963,
    "amount_paid": 0,
    "amount_due": 963,
    "currency": "INR",
    "receipt": "31",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594676130
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"32","user":"tester","created":"2020-07-14T01:37:53.133Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[32,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,32]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "32",
  "user": "tester",
  "created": "2020-07-14T01:37:53.133Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=32&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 32
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [32]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [32] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32] returns 1 rows
DEBUG: src/order-service.js:205	found order 32 with 1 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32] returns 1 rows
DEBUG: src/order-service.js:77	order has 1 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[32,,]
DEBUG: src/order-service.js:188	invoice 32 add item   0 PRICE price for item 9.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[32,0,PRICE,202,price for item,9.00]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:188	invoice 32 add item   1 TAX sales tax @7% 0.63
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[32,1,TAX,,sales tax @7%,0.63]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=9.63
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 9.63 for order [32]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns 1 rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FECGpU4CqdQiH2","entity":"order","amount":963,"amount_paid":0,"amount_due":963,"currency":"INR","receipt":"32","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594690675}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[32,order_FECGpU4CqdQiH2,9.63]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[32,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=32&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "32",
  "billingAddress": {},
  "deliveryAddress": {},
  "items": [
    {
      "invoice": "32",
      "id": 0,
      "kind": "PRICE",
      "sku": "202",
      "description": "price for item",
      "amount": "9.00"
    },
    {
      "invoice": "32",
      "id": 1,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 0.63
    }
  ],
  "amount": 9.63,
  "payorder": {
    "id": "order_FECGpU4CqdQiH2",
    "entity": "order",
    "amount": 963,
    "amount_paid": 0,
    "amount_due": 963,
    "currency": "INR",
    "receipt": "32",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594690675
  }
}
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"33","user":"tester","created":"2020-07-14T01:43:32.866Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[33,101,vegeterian thali,5,1,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[33,102,vegetable samosa,17.4,2,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[22.4,33]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "33",
  "user": "tester",
  "created": "2020-07-14T01:43:32.866Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "101",
      "name": "vegeterian thali",
      "price": 5,
      "units": 1
    },
    {
      "sku": "102",
      "name": "vegetable samosa",
      "price": 17.4,
      "units": 2
    }
  ],
  "total": 22.4
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=33&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 33
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [33]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [33] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [33]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [33] returns 2 rows
DEBUG: src/order-service.js:205	found order 33 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [33]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [33] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[33,,]
DEBUG: src/order-service.js:188	invoice 33 add item   0 PRICE price for item 5.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[33,0,PRICE,101,price for item,5.00]
DEBUG: src/order-service.js:188	invoice 33 add item   1 PRICE price for item 17.40
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[33,1,PRICE,102,price for item,17.40]
DEBUG: src/order-service.js:188	invoice 33 add item   2 TAX sales tax @7% 1.57
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[33,2,TAX,,sales tax @7%,1.57]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=23.97
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 23.97 for order [33]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FECMlJnckrDPSq","entity":"order","amount":2397,"amount_paid":0,"amount_due":2397,"currency":"INR","receipt":"33","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594691012}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[33,order_FECMlJnckrDPSq,23.97]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[33,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=33&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "33",
  "billingAddress": {},
  "deliveryAddress": {},
  "items": [
    {
      "invoice": "33",
      "id": 0,
      "kind": "PRICE",
      "sku": "101",
      "description": "price for item",
      "amount": "5.00"
    },
    {
      "invoice": "33",
      "id": 1,
      "kind": "PRICE",
      "sku": "102",
      "description": "price for item",
      "amount": "17.40"
    },
    {
      "invoice": "33",
      "id": 2,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 1.57
    }
  ],
  "amount": 23.97,
  "payorder": {
    "id": "order_FECMlJnckrDPSq",
    "entity": "order",
    "amount": 2397,
    "amount_paid": 0,
    "amount_due": 2397,
    "currency": "INR",
    "receipt": "33",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594691012
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=32&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 32
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [32]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [32] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32] returns 1 rows
DEBUG: src/order-service.js:205	found order 32 with 1 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [32] returns 1 rows
DEBUG: src/order-service.js:77	order has 1 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[32,,]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[32,,] threw database error error: duplicate key value violates unique constraint "invoices_pkey"
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"34","user":"tester","created":"2020-07-14T01:55:04.860Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[34,101,vegeterian thali,10,2,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[34,102,vegetable samosa,174,20,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[184,34]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "34",
  "user": "tester",
  "created": "2020-07-14T01:55:04.860Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "101",
      "name": "vegeterian thali",
      "price": 10,
      "units": 2
    },
    {
      "sku": "102",
      "name": "vegetable samosa",
      "price": 174,
      "units": 20
    }
  ],
  "total": 184
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=34&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 34
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [34]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [34] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [34]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [34] returns 2 rows
DEBUG: src/order-service.js:205	found order 34 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [34]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [34] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: src/order-service.js:83	got billing address undefined of user tester
DEBUG: src/order-service.js:84	got delivery address undefined of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[34,,]
DEBUG: src/order-service.js:188	invoice 34 add item   0 PRICE price for item 10.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[34,0,PRICE,101,price for item,10.00]
DEBUG: src/order-service.js:188	invoice 34 add item   1 PRICE price for item 174.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[34,1,PRICE,102,price for item,174.00]
DEBUG: src/order-service.js:188	invoice 34 add item   2 TAX sales tax @7% 12.88
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[34,2,TAX,,sales tax @7%,12.88]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: src/order-service.js:115	invoice.amount=196.88
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 196.88 for order [34]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FECZA6pp2MiWU0","entity":"order","amount":19688,"amount_paid":0,"amount_due":19688,"currency":"INR","receipt":"34","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594691716}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[34,order_FECZA6pp2MiWU0,196.88]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[34,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=34&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "34",
  "billingAddress": {},
  "deliveryAddress": {},
  "items": [
    {
      "invoice": "34",
      "id": 0,
      "kind": "PRICE",
      "sku": "101",
      "description": "price for item",
      "amount": "10.00"
    },
    {
      "invoice": "34",
      "id": 1,
      "kind": "PRICE",
      "sku": "102",
      "description": "price for item",
      "amount": "174.00"
    },
    {
      "invoice": "34",
      "id": 2,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 12.88
    }
  ],
  "amount": 196.88,
  "payorder": {
    "id": "order_FECZA6pp2MiWU0",
    "entity": "order",
    "amount": 19688,
    "amount_paid": 0,
    "amount_due": 19688,
    "currency": "INR",
    "receipt": "34",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594691716
  }
}
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: src/index.js:42	Starting message-service on 10000...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/order-service/sql]
INFO: ../common/src/database.js:210	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:210	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:210	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:210	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:210	[insert-invoice-item] INSERT INTO INV ....
DEBUG: ../common/src/database.js:216	read 6 queries from invoice-sql.yml
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
INFO: ../common/src/database.js:210	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:210	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:210	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:210	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:210	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:210	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:210	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:210	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:210	[select-order-history] SELECT (ORDER_F ....
DEBUG: ../common/src/database.js:216	read 13 queries from order-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[select-sessions] SELECT id, user ....
DEBUG: ../common/src/database.js:216	read 2 queries from sessions.yml
DEBUG: ../common/src/database.js:189	in total read 34 queries from 4 files
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
DEBUG: ../common/src/agent.js:69	sending 0 backlog messages
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"35","user":"tester","created":"2020-07-14T01:57:44.561Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [101]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [101] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[35,101,vegeterian thali,10,2,]
DEBUG: ../item-service/src/item-service.js:35	findItem [102]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [102] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[35,102,vegetable samosa,174,20,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[184,35]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "35",
  "user": "tester",
  "created": "2020-07-14T01:57:44.561Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "101",
      "name": "vegeterian thali",
      "price": 10,
      "units": 2
    },
    {
      "sku": "102",
      "name": "vegetable samosa",
      "price": 174,
      "units": 20
    }
  ],
  "total": 184
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=35&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 35
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [35]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [35] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [35]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [35] returns 2 rows
DEBUG: src/order-service.js:205	found order 35 with 2 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [35]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [35] returns 2 rows
DEBUG: src/order-service.js:77	order has 2 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: src/order-service.js:83	got billing address 5 of user tester
DEBUG: src/order-service.js:84	got delivery address 4 of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[35,5,4]
DEBUG: src/order-service.js:188	invoice 35 add item   0 PRICE price for item 10.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[35,0,PRICE,101,price for item,10.00]
DEBUG: src/order-service.js:188	invoice 35 add item   1 PRICE price for item 174.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[35,1,PRICE,102,price for item,174.00]
DEBUG: src/order-service.js:188	invoice 35 add item   2 TAX sales tax @7% 12.88
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[35,2,TAX,,sales tax @7%,12.88]
DEBUG: src/order-service.js:115	invoice.amount=196.88
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 196.88 for order [35]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FECbzq0cbOvm0h","entity":"order","amount":19688,"amount_paid":0,"amount_due":19688,"currency":"INR","receipt":"35","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594691877}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[35,order_FECbzq0cbOvm0h,196.88]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[35,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=35&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "35",
  "billingAddress": {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "deliveryAddress": {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "items": [
    {
      "invoice": "35",
      "id": 0,
      "kind": "PRICE",
      "sku": "101",
      "description": "price for item",
      "amount": "10.00"
    },
    {
      "invoice": "35",
      "id": 1,
      "kind": "PRICE",
      "sku": "102",
      "description": "price for item",
      "amount": "174.00"
    },
    {
      "invoice": "35",
      "id": 2,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 12.88
    }
  ],
  "amount": 196.88,
  "payorder": {
    "id": "order_FECbzq0cbOvm0h",
    "entity": "order",
    "amount": 19688,
    "amount_paid": 0,
    "amount_due": 19688,
    "currency": "INR",
    "receipt": "35",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594691877
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"36","user":"tester","created":"2020-07-14T01:58:37.340Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[36,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,36]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "36",
  "user": "tester",
  "created": "2020-07-14T01:58:37.340Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=36&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 36
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [36]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [36] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [36]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [36] returns 1 rows
DEBUG: src/order-service.js:205	found order 36 with 1 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [36]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [36] returns 1 rows
DEBUG: src/order-service.js:77	order has 1 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: src/order-service.js:83	got billing address 5 of user tester
DEBUG: src/order-service.js:84	got delivery address 4 of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[36,5,4]
DEBUG: src/order-service.js:188	invoice 36 add item   0 PRICE price for item 9.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[36,0,PRICE,202,price for item,9.00]
DEBUG: src/order-service.js:188	invoice 36 add item   1 TAX sales tax @7% 0.63
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[36,1,TAX,,sales tax @7%,0.63]
DEBUG: src/order-service.js:115	invoice.amount=9.63
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 9.63 for order [36]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FECciQmYxN4EQE","entity":"order","amount":963,"amount_paid":0,"amount_due":963,"currency":"INR","receipt":"36","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594691918}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[36,order_FECciQmYxN4EQE,9.63]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[36,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=36&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "36",
  "billingAddress": {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "deliveryAddress": {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "items": [
    {
      "invoice": "36",
      "id": 0,
      "kind": "PRICE",
      "sku": "202",
      "description": "price for item",
      "amount": "9.00"
    },
    {
      "invoice": "36",
      "id": 1,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 0.63
    }
  ],
  "amount": 9.63,
  "payorder": {
    "id": "order_FECciQmYxN4EQE",
    "entity": "order",
    "amount": 963,
    "amount_paid": 0,
    "amount_due": 963,
    "currency": "INR",
    "receipt": "36",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594691918
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"37","user":"tester","created":"2020-07-14T02:20:56.120Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[37,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,37]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "37",
  "user": "tester",
  "created": "2020-07-14T02:20:56.120Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=37&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 37
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [37]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [37] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [37]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [37] returns 1 rows
DEBUG: src/order-service.js:205	found order 37 with 1 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [37]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [37] returns 1 rows
DEBUG: src/order-service.js:77	order has 1 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: src/order-service.js:83	got billing address 5 of user tester
DEBUG: src/order-service.js:84	got delivery address 4 of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[37,5,4]
DEBUG: src/order-service.js:188	invoice 37 add item   0 PRICE price for item 9.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[37,0,PRICE,202,price for item,9.00]
DEBUG: src/order-service.js:188	invoice 37 add item   1 TAX sales tax @7% 0.63
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[37,1,TAX,,sales tax @7%,0.63]
DEBUG: src/order-service.js:115	invoice.amount=9.63
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 9.63 for order [37]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FED0Zzg2Hd1cbu","entity":"order","amount":963,"amount_paid":0,"amount_due":963,"currency":"INR","receipt":"37","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594693273}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[37,order_FED0Zzg2Hd1cbu,9.63]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[37,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=37&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "37",
  "billingAddress": {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "deliveryAddress": {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "items": [
    {
      "invoice": "37",
      "id": 0,
      "kind": "PRICE",
      "sku": "202",
      "description": "price for item",
      "amount": "9.00"
    },
    {
      "invoice": "37",
      "id": 1,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 0.63
    }
  ],
  "amount": 9.63,
  "payorder": {
    "id": "order_FED0Zzg2Hd1cbu",
    "entity": "order",
    "amount": 963,
    "amount_paid": 0,
    "amount_due": 963,
    "currency": "INR",
    "receipt": "37",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594693273
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"38","user":"tester","created":"2020-07-14T02:29:51.712Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[38,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,38]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "38",
  "user": "tester",
  "created": "2020-07-14T02:29:51.712Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=38&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 38
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [38]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [38] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [38]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [38] returns 1 rows
DEBUG: src/order-service.js:205	found order 38 with 1 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [38]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [38] returns 1 rows
DEBUG: src/order-service.js:77	order has 1 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: src/order-service.js:83	got billing address 5 of user tester
DEBUG: src/order-service.js:84	got delivery address 4 of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[38,5,4]
DEBUG: src/order-service.js:188	invoice 38 add item   0 PRICE price for item 9.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[38,0,PRICE,202,price for item,9.00]
DEBUG: src/order-service.js:188	invoice 38 add item   1 TAX sales tax @7% 0.63
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[38,1,TAX,,sales tax @7%,0.63]
DEBUG: src/order-service.js:115	invoice.amount=9.63
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 9.63 for order [38]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FED9sQTtcNaJSN","entity":"order","amount":963,"amount_paid":0,"amount_due":963,"currency":"INR","receipt":"38","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594693801}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[38,order_FED9sQTtcNaJSN,9.63]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[38,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=38&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "38",
  "billingAddress": {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "deliveryAddress": {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "items": [
    {
      "invoice": "38",
      "id": 0,
      "kind": "PRICE",
      "sku": "202",
      "description": "price for item",
      "amount": "9.00"
    },
    {
      "invoice": "38",
      "id": 1,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 0.63
    }
  ],
  "amount": 9.63,
  "payorder": {
    "id": "order_FED9sQTtcNaJSN",
    "entity": "order",
    "amount": 963,
    "amount_paid": 0,
    "amount_due": 963,
    "currency": "INR",
    "receipt": "38",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594693801
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
DEBUG: ../common/src/database.js:124	executing Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [insert-order] SQL:[INSERT INTO ORDERS (USER_ID, CREATED, TIME_OFFSET, STATUS)  VALUES ($1, NOW(), extract(TIMEZONE FROM NOW()), 'CREATED')  RETURNING ID,USER_ID, CREATED, TIME_OFFSET, STATUS
] with parameters [tester] returns single rows
DEBUG: src/order-service.js:36	database order create returned [{"id":"39","user":"tester","created":"2020-07-14T02:37:25.407Z","time_offset":"-25200","status":"CREATED"}]
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/item-service/sql]
INFO: ../common/src/database.js:210	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:210	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:210	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:210	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:210	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:210	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:210	[add-item-tag] INSERT INTO ITE ....
DEBUG: ../common/src/database.js:216	read 13 queries from item-sql.yml
DEBUG: ../common/src/database.js:189	in total read 13 queries from 1 files
DEBUG: ../item-service/src/item-service.js:35	findItem [202]
DEBUG: ../common/src/database.js:124	executing Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-item] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image,   (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i WHERE i.sku = $1
] with parameters [202] returns single rows
DEBUG: ../common/src/database.js:67	query:[insert-order-item] SQL:[INSERT INTO ORDER_ITEMS  (ORDER_FK,  SKU, NAME, PRICE, UNITS, COMMENT) VALUES ($1,  $2,  $3, $4::FLOAT, $5::INTEGER, $6)
] parameters:[39,202,Chicken Manchurian,9,1,]
DEBUG: ../common/src/database.js:67	query:[update-order-total] SQL:[UPDATE ORDERS SET TOTAL=$1::FLOAT WHERE ID = $2
] parameters:[9,39]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "39",
  "user": "tester",
  "created": "2020-07-14T02:37:25.407Z",
  "time_offset": "-25200",
  "status": "CREATED",
  "items": [
    {
      "sku": "202",
      "name": "Chicken Manchurian",
      "price": 9,
      "units": 1,
      "comment": ""
    }
  ],
  "total": 9
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
DEBUG: ../common/src/database.js:124	executing Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester]
DEBUG: ../common/src/database.js:132	returns  2 rows
DEBUG: ../common/src/database.js:144	Query [select-all-address] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER=$1
] with parameters [tester] returns 2 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=39&delivery_address=home
DEBUG: src/order-service.js:74	creating invoice for order 39
DEBUG: ../common/src/database.js:124	executing Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [39]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [find-order] SQL:[SELECT id, user_id as user, created,  time_offset,  status, total   FROM ORDERS  WHERE ID=$1
] with parameters [39] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [39]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [39] returns 1 rows
DEBUG: src/order-service.js:205	found order 39 with 1 lineitems
DEBUG: ../common/src/database.js:124	executing Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [39]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:144	Query [select-order-items] SQL:[SELECT sku, name, price, units, comment  FROM ORDER_ITEMS  WHERE ORDER_FK=$1
] with parameters [39] returns 1 rows
DEBUG: src/order-service.js:77	order has 1 lineitems
DEBUG: ../common/src/database.js:12	connecting to database [localhost:5432/anna] 
DEBUG: ../common/src/database.js:176	readQueriesFromDir(): SQL directory [/Users/ppoddar/workspace/node-om/user-service/sql]
INFO: ../common/src/database.js:210	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:210	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:210	[select-address-by-kind] SELECT ID, KIND ....
DEBUG: ../common/src/database.js:216	read 4 queries from address-sql.yml
INFO: ../common/src/database.js:210	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:210	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:210	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:210	[insert-user-page] INSERT INTO USE ....
DEBUG: ../common/src/database.js:216	read 5 queries from user-sql.yml
DEBUG: ../common/src/database.js:189	in total read 9 queries from 2 files
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,billing] returns single rows
DEBUG: ../common/src/database.js:124	executing Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home]
DEBUG: ../common/src/database.js:132	returns  1 rows
DEBUG: ../common/src/database.js:136	Query [select-address-by-kind] SQL:[SELECT ID, KIND, OWNER, LINE1, LINE2, CITY, ZIP, TIPS FROM ADDRESSES  WHERE OWNER ilike $1  AND KIND ilike $2
] with parameters [tester,home] returns single rows
DEBUG: src/order-service.js:83	got billing address 5 of user tester
DEBUG: src/order-service.js:84	got delivery address 4 of user tester for home address
DEBUG: ../common/src/database.js:67	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[39,5,4]
DEBUG: src/order-service.js:188	invoice 39 add item   0 PRICE price for item 9.00
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[39,0,PRICE,202,price for item,9.00]
DEBUG: src/order-service.js:188	invoice 39 add item   1 TAX sales tax @7% 0.63
DEBUG: ../common/src/database.js:67	query:[insert-invoice-item] SQL:[INSERT INTO INVOICE_ITEMS  (INVOICE_FK,  ID,  KIND, SKU, DESCRIPTION, AMOUNT) VALUES ($1,  $2,  $3, $4, $5, $6::FLOAT)
] parameters:[39,1,TAX,,sales tax @7%,0.63]
DEBUG: src/order-service.js:115	invoice.amount=9.63
DEBUG: ../payment-service/src/payment-service.js:19	creating payorder of 9.63 for order [39]
DEBUG: ../payment-service/src/payment-service.js:27	created payOrder in RazorPay
DEBUG: ../payment-service/src/payment-service.js:28	{"id":"order_FEDHiPlhWZayJZ","entity":"order","amount":963,"amount_paid":0,"amount_due":963,"currency":"INR","receipt":"39","offer_id":null,"status":"created","attempts":0,"notes":[],"created_at":1594694246}
DEBUG: ../common/src/database.js:67	query:[update-invoice-amount] SQL:[UPDATE INVOICES SET PAYORDER=$2, AMOUNT=$3::FLOAT WHERE ID= $1
] parameters:[39,order_FEDHiPlhWZayJZ,9.63]
DEBUG: ../common/src/database.js:67	query:[record-order-event] SQL:[INSERT INTO ORDER_EVENTS (ORDER_FK, WHAT, T) VALUES ($1, $2, NOW())
] parameters:[39,CREATED]
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=39&delivery_address=home of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "id": "39",
  "billingAddress": {
    "id": 5,
    "kind": "billing",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "deliveryAddress": {
    "id": 4,
    "kind": "home",
    "owner": "tester",
    "line1": "AA 10/7",
    "line2": null,
    "city": "Deshbandhu Nagar",
    "zip": "70059",
    "tips": null
  },
  "items": [
    {
      "invoice": "39",
      "id": 0,
      "kind": "PRICE",
      "sku": "202",
      "description": "price for item",
      "amount": "9.00"
    },
    {
      "invoice": "39",
      "id": 1,
      "kind": "TAX",
      "sku": "",
      "description": "sales tax @7%",
      "amount": 0.63
    }
  ],
  "amount": 9.63,
  "payorder": {
    "id": "order_FEDHiPlhWZayJZ",
    "entity": "order",
    "amount": 963,
    "amount_paid": 0,
    "amount_due": 963,
    "currency": "INR",
    "receipt": "39",
    "offer_id": null,
    "status": "created",
    "attempts": 0,
    "notes": [],
    "created_at": 1594694246
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
DEBUG: ../common/src/base-controller.js:24	{
  "name": "hiraafood",
  "version": "1.0.0",
  "build": "",
  "payment": {
    "key_id": "rzp_test_5GjkKK47NrE4b0",
    "key_secret": "kpwjzn4pPpaVdDlXBqmYq5Ku"
  }
}
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
DEBUG: src/order-service.js:30	createOrder  uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
DEBUG: ../common/src/database.js:124	executing Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined]
DEBUG: ../common/src/database.js:132	returns  6 rows
DEBUG: ../common/src/database.js:144	Query [get-catalog] SQL:[SELECT i.sku, i.name, i.category, i.description, i.price,i.image, (SELECT array_to_string(array_agg(tag),',')   FROM item_tags t JOIN items i2  ON t.sku = i2.sku WHERE i.sku=i2.sku ) as tags, (SELECT AVG(rating)  FROM RATINGS r INNER JOIN ITEMS i  ON r.what=i.sku) as rating FROM items i
] with parameters [undefined] returns 6 rows
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
DEBUG: ../common/src/base-controller.js:24	[
  {
    "sku": "101",
    "name": "vegeterian thali",
    "category": "veg",
    "description": "Three vegetable served with served with rich 2 chapatis",
    "price": "5.00",
    "image": "/images/item/veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "102",
    "name": "vegetable samosa",
    "category": "veg",
    "description": "Alooo gobi wrapped an samosa",
    "price": "8.70",
    "image": "/images/item/singara.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "103",
    "name": "Gobi Manchurian",
    "category": "veg",
    "description": "cauliflower in indo-chience style",
    "price": "6.20",
    "image": "/images/item/gobi-manchurian.jpg",
    "tags": "spicy",
    "rating": "3.0000000000000000"
  },
  {
    "sku": "201",
    "name": "non-veg thali",
    "category": "non-veg",
    "description": "Three vegetable served with served witth rich 2 chapatis",
    "price": "15.00",
    "image": "/images/item/non-veg-thali.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "202",
    "name": "Chicken Manchurian",
    "category": "chicken",
    "description": "indian chinese style chicken",
    "price": "9.00",
    "image": "/images/item/chicken-manchurian.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  },
  {
    "sku": "301",
    "name": "Prawn with rice",
    "category": "fish",
    "description": "succulent prawns cooked in thick coconut gravy. Servred with long grain Basamati rice",
    "price": "9.00",
    "image": "/images/item/prawn-with-rice.jpg",
    "tags": null,
    "rating": "3.0000000000000000"
  }
]
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:220	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:220	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:220	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:220	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:220	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:220	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:220	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:220	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:220	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/database.js:220	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:220	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:220	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:220	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:220	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:220	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:220	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:220	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:220	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:220	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:220	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:220	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:220	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:220	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:220	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:220	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:220	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:220	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:220	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:220	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:220	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:220	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:220	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:220	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:220	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:220	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:220	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:220	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:220	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:220	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:220	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:220	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:220	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:220	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:220	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:220	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:220	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:220	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:224	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:224	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:224	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:224	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:224	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:224	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:224	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:224	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:224	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/database.js:224	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:224	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:224	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:224	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:224	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:224	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:224	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:224	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:224	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:224	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:224	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:224	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:224	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:224	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:224	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:224	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:224	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:224	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:224	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:224	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:224	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:224	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:224	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:224	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:224	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:224	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:224	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:224	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:224	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:224	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:224	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:224	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:224	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:224	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:224	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:224	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:224	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:224	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
ERROR: ../common/src/base-controller.js:51	TypeError: pool.connect is not a function
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:223	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:223	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:223	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:223	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:223	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:223	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:223	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:223	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:223	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:223	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:223	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:223	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:223	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:223	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:223	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:223	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:223	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/database.js:223	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:223	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:223	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:223	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:223	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:223	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:223	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:223	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:223	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:223	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:223	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:223	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:223	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:223	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:223	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:223	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:223	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:223	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:223	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:223	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:223	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:223	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:223	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:223	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:223	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:223	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:223	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:223	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:223	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:223	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:226	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:226	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:226	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:226	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:226	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:226	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:226	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:226	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:226	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:226	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:226	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:226	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:226	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:226	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:226	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:226	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:226	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:226	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:226	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:226	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:226	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:226	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:226	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:226	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:226	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:226	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:226	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:226	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:226	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:226	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:226	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:226	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:226	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:226	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:226	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:226	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:226	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:226	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:226	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:226	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:226	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:226	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:226	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:226	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:226	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:226	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:226	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:226	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:226	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:226	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:226	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:226	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:226	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:226	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:226	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:226	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:226	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:226	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:226	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:226	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:226	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:226	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:226	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:226	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:226	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:226	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:226	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:226	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:226	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:226	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:226	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:226	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:226	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:226	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:226	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:226	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:226	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:226	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:226	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:226	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:226	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:226	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:227	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:227	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:227	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:227	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:227	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:227	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:227	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:227	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:227	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:227	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:227	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:227	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:227	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:227	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:227	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:227	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:227	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/database.js:227	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:227	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:227	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:227	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:227	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:227	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:227	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:227	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:227	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:227	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:227	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:227	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:227	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:227	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:227	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:227	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:227	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:227	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:227	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:227	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:227	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:227	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:227	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:227	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:227	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:227	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:227	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:227	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:227	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:227	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:228	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:228	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:228	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:228	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:228	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:228	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:228	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:228	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:228	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:228	[exists-item] SELECT sku from ....
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:228	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:228	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:228	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:228	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:228	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:228	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:228	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:228	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:228	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:228	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:228	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:228	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:228	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:228	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:228	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:228	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:228	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:228	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:228	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:228	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:228	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:228	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:228	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:228	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:228	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:228	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:228	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:228	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:228	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:228	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:228	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:228	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:228	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:228	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:228	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:228	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:228	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:228	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:228	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:228	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:228	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:228	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:228	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:228	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:228	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:228	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:228	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:228	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:228	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:228	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:228	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:228	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:228	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:228	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:228	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:228	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:228	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:228	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:228	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:228	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:228	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:228	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:228	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:228	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:228	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:228	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:228	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:228	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:228	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:228	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:228	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:228	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=40&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=40&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=41&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=41&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=41&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
ERROR: ../common/src/base-server.js:129	errorHandler ============== ERROR Error (500)  ======================
ERROR: ../common/src/base-server.js:130	query:[insert-invoice] SQL:[INSERT INTO INVOICES  (ID, CREATED, STATUS, BILLING_ADDRESS, DELIVERY_ADDRESS)  VALUES ($1, NOW(), 'CREATED', $2, $3) 
] parameters:[41,5,4] threw database error error: duplicate key value violates unique constraint "invoices_pkey"
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=42&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=42&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=43&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=43&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=44&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=44&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=45&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=45&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=46&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=46&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=47&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=47&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
ERROR: ../common/src/base-controller.js:51	Error: connect ECONNREFUSED 127.0.0.1:5432
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=48&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=48&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=49&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=49&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=50&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=50&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=51&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=51&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: src/index.js:42	Starting message-service on 10000...
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [delivery-service] starting on port 9050...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=52&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=52&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=53&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=53&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /invoice/?uid=tester&oid=55&delivery_address=home
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /invoice/?uid=tester&oid=55&delivery_address=home of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /info
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /info of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /item/catalog
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /item/catalog of type Array
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> POST /order/?uid=tester
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /order/?uid=tester of type Object
INFO: ../common/src/base-server.js:111	>>>>>>>>>>>>>>>> GET /user/addresses/?uid=tester
INFO: ../common/src/base-controller.js:20	<<<<<<<<<<<<<<<< ok response for /user/addresses/?uid=tester of type Array
INFO: src/index.js:42	Starting message-service on 10000...
INFO: src/index.js:24	starting doc-service server at port 9090 and docroot /Users/ppoddar/workspace/node-om/doc-service/public
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/base-server.js:98	micro-service [item-service] starting on port 9020...
INFO: ../common/src/base-server.js:98	micro-service [kitchen-service] starting on port 9040...
INFO: ../common/src/base-server.js:98	micro-service [validation-service] starting on port 9060...
INFO: ../common/src/base-server.js:98	micro-service [analytics-service] starting on port 9080...
INFO: ../common/src/database.js:229	[upsert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[insert-address] INSERT INTO ADD ....
INFO: ../common/src/database.js:229	[select-all-address] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[select-address-by-kind] SELECT ID, KIND ....
INFO: ../common/src/database.js:229	[find-user] SELECT u.ID, u. ....
INFO: ../common/src/database.js:229	[authenticate-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[insert-user] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-role] INSERT INTO USE ....
INFO: ../common/src/database.js:229	[insert-user-page] INSERT INTO USE ....
INFO: ../common/src/base-server.js:98	micro-service [user-service] starting on port 9010...
INFO: ../common/src/database.js:229	[find-invoice] SELECT i.id, o. ....
INFO: ../common/src/base-server.js:98	micro-service [payment-service] starting on port 9070...
INFO: ../common/src/database.js:229	[update-invoice-amount] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[update-invoice-status] UPDATE INVOICES ....
INFO: ../common/src/database.js:229	[select-invoice-items] SELECT invoice_ ....
INFO: ../common/src/database.js:229	[insert-invoice] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[insert-invoice-item] INSERT INTO INV ....
INFO: ../common/src/database.js:229	[exists-item] SELECT sku from ....
INFO: ../common/src/database.js:229	[find-item] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[find-item-by-name] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[get-catalog] SELECT i.sku, i ....
INFO: ../common/src/database.js:229	[update-item-name] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-category] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-description] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-price] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[update-item-image] UPDATE ITEMS SE ....
INFO: ../common/src/database.js:229	[insert-item] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[insert-rating] INSERT INTO RAT ....
INFO: ../common/src/database.js:229	[select-item-tags] SELECT TAG FROM ....
INFO: ../common/src/database.js:229	[add-item-tag] INSERT INTO ITE ....
INFO: ../common/src/database.js:229	[find-order] SELECT id, user ....
INFO: ../common/src/database.js:229	[insert-order] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[update-order-total] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[select-order-items] SELECT sku, nam ....
INFO: ../common/src/database.js:229	[update-order-item] UPDATE ORDER_IT ....
INFO: ../common/src/database.js:229	[update-order-status] UPDATE ORDERS S ....
INFO: ../common/src/database.js:229	[delete-order-item] DELETE ORDER_IT ....
INFO: ../common/src/database.js:229	[insert-order-item] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-all-orders] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-order-by-status] SELECT o.id, o. ....
INFO: ../common/src/database.js:229	[select-ordres-by-timerange-and-status] SELECT ID FROM  ....
INFO: ../common/src/database.js:229	[record-order-event] INSERT INTO ORD ....
INFO: ../common/src/database.js:229	[select-order-history] SELECT (ORDER_F ....
INFO: ../common/src/database.js:229	[find-user] SELECT ID, NAME ....
INFO: ../common/src/database.js:229	[select-sessions] SELECT id, user ....
INFO: ../common/src/base-server.js:98	micro-service [order-service] starting on port 9030...
INFO: ../common/src/agent.js:63	[kitchen-service] agent connected to PubSub Service
